-----------------
Git/GitHub
-----------------
#グローバル設定（デフォルトの設定）
$ git config --global user.name "user_name"
$ git config --global user.email "user_email"

#設定の確認
$ git config --global -l

#現在のワークツリーとインデックスの状況確認
$ git status

#バージョン管理の流れ
1,リポジトリの作成（初期化）
$ git init

2,ファイルの変更

3,ファイルの変更箇所のステージ
$ git add ファイル名

4,コミット
$ git commit

※nanoを立ち上げないでコメント
$ git commit -m "コメント"

コミット履歴の確認
$ git log

前回のコミットとの差分を確認
$ git diff



まとめ
-----------------------------------
git init	現在のフォルダ内にリポジトリを作成し、ワークツリーとインデックスを用意する。
git add ファイル名	新規追加や変更されたファイルを選択し、ステージさせる。
git commit	ステージされた変更をコミットする。git commit -m 'message'でも良い。
git status	ワークツリーとインデックスの状況をファイル単位で確認する。
git diff	ワークツリーとインデックスを比較して、その差分を表示する。
git log	過去のコミット履歴を確認する。
-----------------------------------
<<<<<<< HEAD
=======

# GitHubへ反映
GitHubへリポジトリを反映するための一連の流れ

1,GitHubにリモートリポジトリを作成する
「Repository name」に入力
2,ローカルリポジトリにリモートリポジトリを登録する
$ git remote add origin https://github.com/michikong0615/sinatra_Git_GitHub

リモートリポジトリの登録状況を確認
$ git remote -v

3,登録したリモートリポジトリへプッシュする
$ git push -u origin master

4,GitHubのリモートリポジトリにプッシュされたか確認する
ブラウザにてhttps://github.com/michikong0615/「Repository name」

まとめ
-----------------------------------
git remote add origin リモートリポジトリURL	ローカルリポジトリにリモートリポジトリを登録する
git remote -v	ローカルリポジトリに登録されたリモートリポジトリの一覧を表示する
git push origin master	登録したリモートリポジトリへプッシュする
-----------------------------------
>>>>>>> 481575b... GitHubに反映

# GitHubへ反映
GitHubへリポジトリを反映するための一連の流れ

1,GitHubにリモートリポジトリを作成する
「Repository name」に入力
2,ローカルリポジトリにリモートリポジトリを登録する
$ git remote add origin　URL

リモートリポジトリの登録状況を確認
$ git remote -v

3,登録したリモートリポジトリへプッシュする
$ git push -u origin master

4,GitHubのリモートリポジトリにプッシュされたか確認する
ブラウザにてhttps://github.com/michikong0615/「Repository name」

まとめ
-----------------------------------
git remote add origin リモートリポジトリURL	ローカルリポジトリにリモートリポジトリを登録する
git remote -v	ローカルリポジトリに登録されたリモートリポジトリの一覧を表示する
git push origin master	登録したリモートリポジトリへプッシュする
-----------------------------------

GitHubにpushした後にコメントの変更

コミット履歴
$ git log --oneline
481575b (HEAD -> master, origin/master) GitHubに反映
f04a9ca 復習←ここを変えたい
2ef02db first commit

コミットコメントを変更したいコミットの１つ直前のコミットを引数�����指定
$ git rebase -i 2ef02db

nanoにてコメント変更するコミットに「edit」を指定する
control+Xの後にEnterで終了

指定したコミットのコミットコメントを修正
$ git commit --amend

コミットコメントの修正
$ git rebase --continue



-----------------
section2
-----------------

sinatraインストール

$ gem install -N sinatra
$ gem install -N sinatra-reloader

# 現在時刻の表示
Time.now

-----------------
section3
-----------------

$ mkdir views
$ cd views/
$ touch index.erb

